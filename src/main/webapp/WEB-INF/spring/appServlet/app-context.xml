<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:cloud="http://schema.cloudfoundry.org/spring"
  xmlns:os-core="http://www.openspaces.org/schema/core"
  xmlns:mongo="http://www.springframework.org/schema/data/mongo"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jms="http://www.springframework.org/schema/jms"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:cache="http://www.springframework.org/schema/cache"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.1.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
    http://schema.cloudfoundry.org/spring
    http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd
    http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
    http://www.springframework.org/schema/jms 
    http://www.springframework.org/schema/jms/spring-jms.xsd
    http://www.springframework.org/schema/cache 
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.openspaces.org/schema/core 
    http://www.openspaces.org/schema/8.0/core/openspaces-core.xsd
    http://activemq.apache.org/schema/core 
    http://activemq.apache.org/schema/core/activemq-core.xsd">

	<!-- Repository scannning -->
  	<mongo:repositories base-package="com.showcase.mongo.repository" />
  
    <!-- HelloMongo and other bean scanning  -->
  	<context:component-scan base-package="com.showcase"></context:component-scan>
  	
  	<cache:annotation-driven />
  	
  	<!-- generic cache manager -->
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
	  <property name="caches">
	    <set>
	      <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="actor"/>
	    </set>
	  </property>
	</bean>
  	  
  	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
	     <constructor-arg name="mongo" ref="mongo"/>
	     <constructor-arg name="databaseName" value="test"/>
    </bean>
    
    <bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
     	<property name="host" value="localhost"/>
    </bean>
    
    
    <!-- Mongo DB cloud config
    <cloud:mongo-db-factory id="mongoDbFactory" />
    
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongoDbFactory" />
    </bean>
     -->
     
     <!-- Use this post processor to translate any MongoExceptions thrown in @Repository annotated classes 
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->

     <!-- <beans profile="default">
        <mongo:db-factory id="mongoDbFactory" dbname="test" host="localhost" port="27017" username="test_user" password="efgh" />
     </beans>  
     
     <beans profile="cloud">
        <cloud:mongo-db-factory id="mongoDbFactory" />
     </beans>  -->
     
     <!-- RESTfull spring -->
     
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				 <ref bean="jaxbMarshallerConverter" />
			</list>
		</property>
	</bean>
	
	<bean id="jaxbMarshallerConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
	  <property name="marshaller" ref="jaxbMarshaller" />
	  <property name="unmarshaller" ref="jaxbMarshaller" />
	</bean>
	
	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
            <list>
                <value>com.showcase.mongo.domain.Movie</value>
                <value>com.showcase.mongo.domain.MovieList</value>                
            </list>
        </property>
    </bean>
    
	<!-- JMS Spring ActiveMQ http://localhost:8161 -->
	
	<!-- <bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://jmsserver:9999"/>
	</bean>
	
	<bean id="sampleJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="activeMQConnectionFactory" />
		 <property name="destination" ref="sampleTopic"></property> 
	</bean> -->
	
	<!-- <os-core:space id="space" url="jini://*/*/space" /> -->
	
	<os-core:giga-space-context/>
	
	<os-core:space id="space" url="/./upsspace"   />
	
	<os-core:giga-space id="gigaSpace" space="space" />
	
	<os-core:local-cache id="localCacheSpace" space="space" update-mode="PULL" >
	    <os-core:properties>
	        <props>
	            <prop key="space-config.engine.cache_size">50000</prop>
	            <prop key="space-config.engine.memory_usage.high_watermark_percentage">65</prop>
	            <prop key="space-config.engine.memory_usage.write_only_block_percentage">63</prop>
	            <prop key="space-config.engine.memory_usage.write_only_check_percentage">60</prop>
	            <prop key="space-config.engine.memory_usage.low_watermark_percentage">55</prop>
	        </props>
	    </os-core:properties>
	</os-core:local-cache>
	
	<os-core:map id="map" space="localCacheSpace"/>
	
</beans>